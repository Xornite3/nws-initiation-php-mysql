/**
 * Passons maintenant √† l'impl√©mentation du JavaScript.
 *
 * Ce fichier contient du code JavaScript qui doit √™tre ex√©cut√© sur toutes les pages.
 * Par exemple, le code qui g√®re le formulaire de newsletter.
 */

/**
 * EVENT LISTENER
 *
 * Un "event listener" est une fonction qui √©coute un √©v√©nement sur un √©l√©ment HTML.
 *
 * Ici, on √©coute l'√©v√©nement "DOMContentLoaded" sur le document pour v√©rifier que le DOM est bien charg√© (c'est-√†-dire que la page est bien pr√™te)
 * et on ex√©cute une fonction qui contient notre code JavaScript (c'est une bonne pratique pour √©viter les probl√®mes de chargement).
 *
 * Note: on utilise une fonction fl√©ch√©e (ES6) pour d√©finir la fonction de rappel
 */
document.addEventListener("DOMContentLoaded", () => {
  /* On affiche un message dans la console pour v√©rifier que le fichier est bien charg√© (pas obligatoire, mais pratique d√©bugger) */
  console.log("app.js charg√© üöÄ");

  /* On initialise la fonction newsletterSubscribe */
  newsletterSubscribe();

  /* On initialise aussi la fonction toggleThemeMode() */
  toggleThemeMode();
});

/**
 * Fonction qui g√®re le formulaire de newsletter
 *
 * Cette fonction est appel√©e dans l'event listener ci-dessus.
 * Elle nous sert √† v√©rifier que l'email est valide et active le bouton d'envoi si c'est le cas.
 */
function newsletterSubscribe() {
  /* On commence par cibler le formulaire de newsletter grace √† son id en utilisant querySelector() et on le stock dans une constante "newsletterForm" */
  const newsletterForm = document.querySelector("#newsletter-form");

  /* On r√©cup√®re ensuite l'input de l'email et on le stock dans une constante "emailInput" */
  const emailInput = newsletterForm.querySelector("input[type=email]");

  /* On r√©cup√®re aussi le bouton d'envoi et on le stock dans une constante "submitButton" */
  const submitButton = newsletterForm.querySelector("button[type=submit]");

  /* Maintenant, si le formulaire n'existe pas, √ßa ne sert √† rien de continuer alors on sort de la fonction. */
  if (newsletterForm === null) {
    return;
  }

  /* On commence par d√©sactiver le bouton d'envoi par d√©faut pour √©viter l'envoi avant v√©rification du champ */
  submitButton.disabled = true;

  /* On cr√©er une fonction de rappel qui v√©rifie si l'email est valide */
  function validateNewsletterEmailField() {
    if (validateEmail(emailInput.value)) {
      /* SI, validateEmail() return 'true' (l'email est valide) on active le bouton d'envoi */
      submitButton.disabled = false;
    } else {
      /* SINON, on d√©sactive le bouton d'envoi */
      submitButton.disabled = true;
    }
  }

  /* On cr√©√© une fonction qui v√©rifie si l'email est valide grace √† une RegExp */
  function validateEmail(email) {
    const regExp = /\S+@\S+\.\S+/;
    return regExp.test(email); /* return 'true' si email match avec regExp */
  }

  /* On pourrait imaginer d'autres fonctions de validation de champ comme un √¢ge minimum par exemple ... */

  /**
   * Enfin, On √©coute l'√©v√©nement "input", c'est √† dire quand l'utilisateur tape du text, sur l'input de l'email
   * et on appelle la fonction validate √† chaque fois que l'√©v√©nement est d√©clench√© pour v√©rifier si l'email est valide
   */
  emailInput.addEventListener("input", validateNewsletterEmailField);
}

/**
 * Fonction qui g√®re le mode sombre/clair
 */
function toggleThemeMode() {
  /**
   * √Ä VOUS DE JOUER !
   * ----------------------------------------------
   * Vous devez √©crire le code qui permet de changer de th√®me en cliquant sur le bouton
   * Suivez les √©tapes ci-dessous pour impl√©menter cette fonctionnalit√© :
   */

  // 1. On cible le bouton qui permet de changer de th√®me
  const themeButton = document.querySelector("[data-toggle='theme']");

  // 2. On cible le html pour changer le data-theme

  // 3. On v√©rifie si le bouton existe sinon on sort de la fonction

  // 4. On √©coute l'√©v√©nement "click" sur le bouton
  themeButton.addEventListener("click", () => {
    // 5. On toggle le data-theme du html

    // 6. On permute les ic√¥nes "moon" et "sun" en enlevant l'attribut hidden sur l‚Äôic√¥ne correspondante

    // Note : Vous pourrez supprimer l'appel de la fonction showAlertMessage() une fois que votre code sera impl√©ment√©
    // et que vous aurez v√©rifi√© qu'il fonctionne correctement üòâ
    showAlertMessage(
      "Le theme switcher n'est pas encore impl√©ment√© ! \n\n Veuillez corriger le code JavaScript correspondant pour le faire fonctionner."
    );
  });
}

/**
 * Fonction qui affiche une alerte
 * @param {string} message
 */
function showAlertMessage(message) {
  alert(message);
}
